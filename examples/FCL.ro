-- First-class labels

sel : forall l : L, t : *, z : R[*]. {l := t} < z => Pi z -> #l -> t
sel = \ r l. prj r / l

upd : forall l : L, t u : *, z1 z2 y1 y2 : R[*].
      z1 < {l := t}, z1 + z2 ~ y1, {l := u} + z2 ~ y2
      => #l -> u -> Pi y1 -> Pi y2
upd = \l u r. (l := u) ++ prj r

con : forall l : L, t : *, z : R[*]. {l := t} < z => #l -> t -> Sigma z
con = \l x. inj (l := x)

case : forall l : L, t u : *. #l -> (t -> u) -> Sigma {l := t} -> u
case = \ l f x. f (x / l)

ifte : forall t : *. Sigma { 'True := Pi {}, 'False := Pi {} } -> t -> t -> t
ifte = \b t f. (case #'True (\ u . t) | case #'False (\ u . f)) b